{
  "paragraphs": [
    {
      "text": "print(s\"\"\"%html\n<center>\n    <h1><a href=\"http://diplodatos.famaf.unc.edu.ar/\">Diplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones</a></h1>\n    <h2>Curso <a href=\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\">Programación Distribuida sobre Grandes Volúmenes de Datos</a></h2>\n</center>\n\n<br>\n\n<h3 style=\"text-align:center;\"> Damián Barsotti  </h3>\n\n<h3 style=\"text-align:center;\">\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    Facultad de Matemática Astronomía Física y Computación\n    </a>\n<br/>\n    <a href=\"http://www.unc.edu.ar\">\n    Universidad Nacional de Córdoba\n    </a>\n<br/>\n    <center>\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    <img src=\"$baseDir/comun/logo%20UNC%20FAMAF%202016.png\" alt=\"Drawing\" style=\"width:50%;\"/>\n    </a>\n    </center>\n</h3>\n\n<p style=\"font-size:15px;\">\n    <br />\n        This work is licensed under a\n        <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n    <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n        <img alt=\"Creative Commons License\" style=\"border-width:0;vertical-align:middle;float:right\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" />\n    </a>\n</p>\n\"\"\")\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<center>\n    <h1><a href=\"http://diplodatos.famaf.unc.edu.ar/\">Diplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones</a></h1>\n    <h2>Curso <a href=\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\">Programación Distribuida sobre Grandes Volúmenes de Datos</a></h2>\n</center>\n\n<br>\n\n<h3 style=\"text-align:center;\"> Damián Barsotti  </h3>\n\n<h3 style=\"text-align:center;\">\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    Facultad de Matemática Astronomía Física y Computación\n    </a>\n<br/>\n    <a href=\"http://www.unc.edu.ar\">\n    Universidad Nacional de Córdoba\n    </a>\n<br/>\n    <center>\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    <img src=\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/comun/logo%20UNC%20FAMAF%202016.png\" alt=\"Drawing\" style=\"width:50%;\"/>\n    </a>\n    </center>\n</h3>\n\n<p style=\"font-size:15px;\">\n    <br />\n        This work is licensed under a\n        <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n    <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n        <img alt=\"Creative Commons License\" style=\"border-width:0;vertical-align:middle;float:right\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" />\n    </a>\n</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103617_112589921",
      "id": "20171030-111535_1286884722",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:32484"
    },
    {
      "text": "%md\n### Antes de comenzar\n1. Lanzar terminal\n1. Actualizar repo:\n```sh\ncd diplodatos_bigdata\ngit pull\n```\n1. Lanzar [Zeppelin](http://zeppelin.apache.org/) en docker:\n```sh\n./docker/zeppelin.sh\n```\n1. En navegador abrir [http://localhost:8080](http://localhost:8080)\n1. Seleccionar `Import note`\n1. Elegir json en `diplodatos_bigdata/clases/05_ml/note.zpln`\n2. Seleccionar `Clase 05 - Machine Learning`\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Antes de comenzar</h3>\n<ol>\n<li>Lanzar terminal</li>\n<li>Actualizar repo:</li>\n</ol>\n<pre><code class=\"language-sh\">cd diplodatos_bigdata\ngit pull\n</code></pre>\n<ol>\n<li>Lanzar <a href=\"http://zeppelin.apache.org/\">Zeppelin</a> en docker:</li>\n</ol>\n<pre><code class=\"language-sh\">./docker/zeppelin.sh\n</code></pre>\n<ol>\n<li>En navegador abrir <a href=\"http://localhost:8080\">http://localhost:8080</a></li>\n<li>Seleccionar <code>Import note</code></li>\n<li>Elegir json en <code>diplodatos_bigdata/clases/05_ml/note.zpln</code></li>\n<li>Seleccionar <code>Clase 05 - Machine Learning</code></li>\n</ol>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103617_458748227",
      "id": "20171030-111641_2139999376",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32485"
    },
    {
      "text": "%md\n## Areas del Big Data\n- Analitics (datos estructurados)\n- Streaming (real time)\n- **Machine Learning**\n- Análisis de Redes (grandes grafos)\n- Visualización",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Areas del Big Data</h2>\n<ul>\n  <li>Analitics (datos estructurados)</li>\n  <li>Streaming (real time)</li>\n  <li><strong>Machine Learning</strong></li>\n  <li>Análisis de Redes (grandes grafos)</li>\n  <li>Visualización</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103617_235330197",
      "id": "20181026-174017_2147321926",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32486"
    },
    {
      "text": "%md\n![](https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/05_ml/unified_stack.png)",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 6,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p><img src=\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/05_ml/unified_stack.png\" /></p>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103617_590623526",
      "id": "20181026-174035_2101012250",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32487"
    },
    {
      "text": "%md\n# Machine Learning\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Machine Learning</h1>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103617_1369934721",
      "id": "20171030-131603_726204322",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32488"
    },
    {
      "text": "println(s\"\"\"%html\n<h4>Programación tradicional:</h4>\n<center>\n<img src=\"$baseDir/05_ml/00-prog-tradic.svg\" alt=\"Drawing\" style=\"width: 70%;\"/>\n</center>\n\"\"\")\n\n//%md\n//### Programación tradicional\n\n//%%% yuml type=class style=plain format=svg\n//  [note:Datos Entrada{bg:cornsilk}]->[Algoritmo{bg:red}]\n//  [Algoritmo{bg:red}]->[note:Datos Salida{bg:cornsilk}]\n//*/%%%\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h4>Programación tradicional:</h4>\n<center>\n<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/00-prog-tradic.svg\" alt=\"Drawing\" style=\"width: 70%;\"/>\n</center>\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103617_940707425",
      "id": "20171030-131619_420103761",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32489"
    },
    {
      "text": "%md\n### Machine Learning = algoritmos que generan algoritmos.",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Machine Learning = algoritmos que generan algoritmos.</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103617_398754576",
      "id": "20171030-131659_166449551",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32490"
    },
    {
      "title": "Entrenamiento:",
      "text": "println(s\"\"\"%html\n<img src=\"$baseDir/05_ml/01-entrenamiento.svg\" alt=\"Drawing\" style=\"width: 100%;\"/>\n\"\"\")\n\n/*\n%md\n#### Entrenamiento:\n%%% yuml type=class style=plain format=svg\n  [note:Datos;Entrenamiento{bg:cornsilk}]->[Algoritmo;ML{bg:red}]\n  [Algoritmo;ML{bg:red}]->[note:Algoritmo;(modelo){bg:orange}]\n%%%\n*/",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 6,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/01-entrenamiento.svg\" alt=\"Drawing\" style=\"width: 100%;\"/>\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103617_1032207395",
      "id": "20171030-131720_1434322443",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32491"
    },
    {
      "title": "Uso:",
      "text": "println(s\"\"\"%html\n<img src=\"$baseDir/05_ml/02-uso.svg\" alt=\"Drawing\" style=\"width: 100%;\"/>\n\"\"\")\n\n/*\n%md\n#### Uso:\n\n%%% yuml type=class style=plain format=svg\n  [note:Datos Entrada{bg:cornsilk}]->[Algoritmo;(modelo){bg:orange}]\n  [Algoritmo;(Modelo)]->[note:Datos Salida{bg:cornsilk}]\n%%%\n\n*/\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 6,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/02-uso.svg\" alt=\"Drawing\" style=\"width: 100%;\"/>\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103617_901742684",
      "id": "20171030-113042_604094829",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32492"
    },
    {
      "title": "Todo junto:",
      "text": "println(s\"\"\"%html\n<center>\n<img src=\"$baseDir/05_ml/03-todo-junto.svg\" alt=\"Drawing\" style=\"width: 90%;\"/>\n</center>\n\"\"\")\n\n/*\n%md\n%%% yuml type=class style=plain dir=lr format=svg\n  [note:Datos Entrada{bg:cornsilk}]->[Algoritmo;(modelo){bg:orange}]\n  [note:Datos;Entrenamiento{bg:cornsilk}]->[Algoritmo;ML]\n  [Algoritmo;ML{bg:red}]->[Algoritmo;(modelo){bg:orange}]\n  [Algoritmo;(Modelo)]->[note:Datos Salida{bg:cornsilk}]\n%%%\n*/\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<center>\n<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/03-todo-junto.svg\" alt=\"Drawing\" style=\"width: 90%;\"/>\n</center>\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103617_1423455073",
      "id": "20171030-115900_1686761842",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32493"
    },
    {
      "text": "%md\n### En big data se usan algoritmos ML **paralelizables**\n\n(más adelante veremos workarround)",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>En big data se usan algoritmos ML <strong>paralelizables</strong></h3>\n<p>(más adelante veremos workarround)</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103617_765149181",
      "id": "20191204-173047_1469538210",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32494"
    },
    {
      "text": "%md\n# Spark Machine Learning Library (MLlib)\n\n* Algoritmos ML: clasificación, regresión, clustering, filtrado colaborativo (recomendación), etc.\n* Manejo de features (featurization): extracción de features, transformación, reducción de dimensionalidad, selección, etc.\n* Pipelines: abstracción que representa flujo de trabajo en ML.\n* Persistencia: carga y guardado de modelos, algoritmos y pipelines.\n* Utilidades: álgebra lineal, estadística, manejo de datos, etc.\n* 2 APIs: sobre RDD (spark.mllib) o DataFrame (spark.ml)\n\n### Importante\n\nEn 2.0.0+ La API basada en **Dataframe** (spark.ml) es *primary API*:\n\n* No se agregan nuevas características a la API RDD (spark.mllib).\n* Solo se le corregirán errores.\n* Se irán agregando features de RDD a la API DataFrame.\n\n#### Por lo tanto veremos la API basada en DataFrame\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Spark Machine Learning Library (MLlib)</h1>\n<ul>\n  <li>Algoritmos ML: clasificación, regresión, clustering, filtrado colaborativo (recomendación), etc.</li>\n  <li>Manejo de features (featurization): extracción de features, transformación, reducción de dimensionalidad, selección, etc.</li>\n  <li>Pipelines: abstracción que representa flujo de trabajo en ML.</li>\n  <li>Persistencia: carga y guardado de modelos, algoritmos y pipelines.</li>\n  <li>Utilidades: álgebra lineal, estadística, manejo de datos, etc.</li>\n  <li>2 APIs: sobre RDD (spark.mllib) o DataFrame (spark.ml)</li>\n</ul>\n<h3>Importante</h3>\n<p>En 2.0.0+ La API basada en <strong>Dataframe</strong> (spark.ml) es <em>primary API</em>:</p>\n<ul>\n  <li>No se agregan nuevas características a la API RDD (spark.mllib).</li>\n  <li>Solo se le corregirán errores.</li>\n  <li>Se irán agregando features de RDD a la API DataFrame.</li>\n</ul>\n<h4>Por lo tanto veremos la API basada en DataFrame</h4>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103617_991494188",
      "id": "20181023-183558_542765570",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32495"
    },
    {
      "text": "%md\n### Tipos Básicos\n\n#### Todo es\n* Transformer = Toma datos y devuelve datos. Ej. algoritmo , modelos, query SQL, etc.\n* Estimator = Toma datos y devuelve un transformer (Ej. algoritmo ML).\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:29:49+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 14,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Tipos Básicos</h3>\n<h4>Todo es</h4>\n<ul>\n<li>Transformer = Toma datos y devuelve datos. Ej. algoritmo , modelos, query SQL, etc.</li>\n<li>Estimator = Toma datos y devuelve un transformer (Ej. algoritmo ML).</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_1771325649",
      "id": "20171030-131935_1623447756",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:32496",
      "dateFinished": "2021-10-22T13:29:44+0000",
      "dateStarted": "2021-10-22T13:29:42+0000"
    },
    {
      "title": "Entrenamiento:",
      "text": "println(s\"\"\"%html\n<center>\n<img src=\"$baseDir/05_ml/04-entrenamiento.svg\" alt=\"Drawing\" style=\"width: 90%;\"/>\n</center>\n\"\"\")\n\n/*\n%md\n#### Entrenamiento:\n\n%%% yuml type=class style=plain format=svg\n  [note:Dataframe;Entrenamiento{bg:cornsilk}]->[Estimator;(algoritmo ML)|fit()]\n  [Estimator;(algoritmo ML)|fit(){bg:red}]->[note:Transformer;(modelo){bg:orange}]\n%%%\n\n  [Dataframe Entrenamiento{bg:cornsilk}]->[Estimator (algoritmo ML)|*fit()*{bg:red}]\n  [Estimator (algoritmo ML)|fit(){bg:red}]->[Transformer (modelo){bg:orange}]\n*/\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<center>\n<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/04-entrenamiento.svg\" alt=\"Drawing\" style=\"width: 90%;\"/>\n</center>\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_1498241242",
      "id": "20171030-132019_183881887",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32497"
    },
    {
      "title": "Uso:",
      "text": "println(s\"\"\"%html\n<center>\n<img src=\"$baseDir/05_ml/05-uso.svg\" alt=\"Drawing\" style=\"width: 80%;\"/>\n</center>\n\"\"\")\n\n/*\n%md\n#### Uso:\n\n%%% yuml type=class style=plain format=svg\n  [note:Dataframe;Entrada{bg:cornsilk}]->[Transformer;(modelo)|transform(){bg:orange}]\n  [Transformer;(modelo)|transform(){bg:orange}]->[note:Dataframe;Salida{bg:cornsilk}]\n%%%\n [Dataframe Entrada{bg:cornsilk}]->[Transformer (modelo)|*transform()*{bg:orange}]\n  [Transformer (modelo)|_transform()_{bg:orange}]->[Dataframe Salida{bg:cornsilk}]\n*/",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<center>\n<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/05-uso.svg\" alt=\"Drawing\" style=\"width: 80%;\"/>\n</center>\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_2097247732",
      "id": "20171030-124531_1138034350",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32498"
    },
    {
      "text": "%md\n## Ejemplo\n\n### Predicción de género a partir del peso y la altura.\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Ejemplo</h2>\n<h3>Predicción de género a partir del peso y la altura.</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_1829786648",
      "id": "20171030-161240_1927838355",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32499"
    },
    {
      "title": "Lectura datos de entrada",
      "text": "%pyspark\n\ninputFile = \"../../diplodatos_bigdata/ds/people_sex_height_age_weight.json\"\n\npeople = spark.read.json(inputFile) \\\n    .select(\"kgs\", \"mts\", \"sex\") \\\n    .repartition(sc.defaultParallelism) \\\n    .cache()\n    \nprint(\"Cantidad de filas: {}. Cantidad de particiones: {}.\".format(people.count(), people.rdd.getNumPartitions()))\n\nz.show(people.sample(False,0.001))",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:36:55+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "fontSize": 14,
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {},
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "sex": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "sex": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_533215848",
      "id": "20201029-105118_47901818",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:32500",
      "dateFinished": "2021-10-22T13:37:11+0000",
      "dateStarted": "2021-10-22T13:36:55+0000"
    },
    {
      "title": "División datos para entrenamiento y test",
      "text": "%pyspark\n\ntrainDF, testDF = people.randomSplit([0.95, 0.05]) \n\nprint(f\"\"\"%table\nCantidad Train \\t Cantidad Test\n{trainDF.count()} \\t {testDF.count()}\n\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:45:02+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Cantidad Train ": "string",
                      " Cantidad Test": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_1861072212",
      "id": "20201029-105132_386130372",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:32501",
      "dateFinished": "2021-10-22T13:45:02+0000",
      "dateStarted": "2021-10-22T13:45:02+0000"
    },
    {
      "title": "Features",
      "text": "%md\n### Features\n\nLos algoritmos ML utilizan datos numeŕicos:\n\n* Como **entrada** toman un vector numérico - **vector de features**\n* Como predicción de **salida** producen números - **labels**\n\nPor lo tanto hay que transformar los datos de entrada.",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:38:07+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "title": false,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Features</h3>\n<p>Los algoritmos ML utilizan datos numeŕicos:</p>\n<ul>\n<li>Como <strong>entrada</strong> toman un vector numérico - <strong>vector de features</strong></li>\n<li>Como predicción de <strong>salida</strong> producen números - <strong>labels</strong></li>\n</ul>\n<p>Por lo tanto hay que transformar los datos de entrada.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_1621505200",
      "id": "20171030-162516_498978901",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:32502",
      "dateFinished": "2021-10-22T13:37:56+0000",
      "dateStarted": "2021-10-22T13:37:56+0000"
    },
    {
      "title": "Transformador de features:",
      "text": "println(s\"\"\"%html\n<center>\n<img src=\"$baseDir/05_ml/06-transformador-features.svg\" alt=\"Drawing\" style=\"width: 80%;\"/>\n</center>\n\"\"\")\n\n/*\n%md\n### Transformador de features\n\n\n        %%% yuml type=class style=plain format=svg\n          [note:Dataframe;Entrada{bg:cornsilk}]->[Transformer;(featurizer)|transform(){bg:orange}]\n          [Transformer;(featurizer)|transform(){bg:orange}]->[note:Dataframe; vector features{bg:cornsilk}]\n        %%%\n\n#### (todo es Transformer o Estimator)\n\n[Dataframe Entrada{bg:cornsilk}]->[Transformer (featurizer)|*transform()*{bg:orange}]\n          [Transformer (featurizer)|*transform()*{bg:orange}]->[Dataframe Features{bg:cornsilk}]\n*/",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<center>\n<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/06-transformador-features.svg\" alt=\"Drawing\" style=\"width: 80%;\"/>\n</center>\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_1463141948",
      "id": "20181023-184758_264849729",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32503"
    },
    {
      "title": "Creación de vector de features (entrada)",
      "text": "%pyspark\nfrom pyspark.ml.feature import VectorAssembler\n\nvAssembler = VectorAssembler(\n    inputCols=[\"kgs\", \"mts\"],\n    outputCol=\"features\")\n\ntrainAssembled = vAssembler.transform(trainDF)\n\nz.show(trainAssembled.sample(False, 0.001))\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "sex": "string",
                      "features": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_1145181046",
      "id": "20171030-163816_785316912",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32504"
    },
    {
      "title": "Vector Assembler es un Transformer:",
      "text": "println(s\"\"\"%html\n<center>\n<img src=\"$baseDir/05_ml/07-vector-assembler.svg\" alt=\"Drawing\" style=\"width: 70%;\"/>\n</center>\n\"\"\")\n\n/*\n%md\n#### VectorAssembler es un **Transformer**\n\n%%% yuml type=class style=plain format=svg\n  [note:trainDF{bg:cornsilk}]->[vAssembler;(modelo)|transform(){bg:orange}]\n  [vAssembler;(modelo)|transform(){bg:orange}]->[note:trainAssembled{bg:cornsilk}]\n%%%\n[trainDF{bg:cornsilk}]->[vAssembler|*transform()*{bg:orange}]\n  [vAssembler|*transform()*{bg:orange}]->[trainAssembled{bg:cornsilk}]\n\n*/",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<center>\n<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/07-vector-assembler.svg\" alt=\"Drawing\" style=\"width: 70%;\"/>\n</center>\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_196354685",
      "id": "20171030-170208_678915767",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32505"
    },
    {
      "title": "Creación de Labels (predicción)",
      "text": "%md (es necesario leer toda la entrada)",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>(es necesario leer toda la entrada)</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_965104217",
      "id": "20171030-165531_1386883868",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32506"
    },
    {
      "title": "Creación de Labels",
      "text": "%pyspark\n\nfrom pyspark.ml.feature import StringIndexer\n\nstrIndexer = StringIndexer(\n  inputCol=\"sex\",\n  outputCol=\"label\")\n\n# indexer tiene que leer la entrada\nsexIndexer = strIndexer.fit(trainAssembled)\n\ntrainFeaturized = sexIndexer.transform(trainAssembled)\n\nz.show(trainFeaturized.sample(False, 0.002))\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "kgs",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "mts",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "sex",
                        "visible": true,
                        "width": 267,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "features",
                        "visible": true,
                        "width": 355,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "label",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "sex": "string",
                      "features": "string",
                      "label": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_752688601",
      "id": "20171030-164611_870874723",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32507"
    },
    {
      "title": "String Indexer es un Estimator:",
      "text": "println(s\"\"\"%html\n<center>\n<img src=\"$baseDir/05_ml/08-string-indexer.svg\" alt=\"Drawing\" style=\"width: 70%;\"/>\n</center>\n<center>\n<img src=\"$baseDir/05_ml/09-string-indexer.svg\" alt=\"Drawing\" style=\"width: 75%;\"/>\n</center>\n\"\"\")\n/*\n%md\n#### StringIndexer es un Estimator\n\n%%% yuml type=class style=plain format=svg\n  [note:trainAssembled{bg:cornsilk}]->[strIdexer;(algoritmo)|fit(){bg:red}]\n  [strIdexer;(algoritmo)|fit(){bg:red}]->[note:sexIndexer;(model){bg:orange}]\n%%%\n  [trainAssembled{bg:cornsilk}]->[strIndexer|*fit()*{bg:red}]\n  [strIndexer|*fit()*{bg:red}]->[sexIndexer{bg:orange}]\n\n%%% yuml type=class style=plain format=svg\n  [note:trainAssembled{bg:cornsilk}]->[sexIndexer;(model)|transform(){bg:orange}]\n  [sexIndexer;(model)|transform(){bg:orange}]->[note:trainFeaturized{bg:cornsilk}]\n%%%\n[trainAssembled{bg:cornsilk}]->[sexIndexer|*transform()*{bg:orange}]\n  [sexIndexer|*transform()*{bg:orange}]->[trainFeaturized{bg:cornsilk}]\n\n*/\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<center>\n<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/08-string-indexer.svg\" alt=\"Drawing\" style=\"width: 70%;\"/>\n</center>\n<center>\n<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/09-string-indexer.svg\" alt=\"Drawing\" style=\"width: 75%;\"/>\n</center>\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_2037833584",
      "id": "20171030-170028_1904063913",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32508"
    },
    {
      "text": "%md\n\n#### Más información\n* [Spark Docs - Extracting, transforming and selecting features](http://spark.apache.org/docs/latest/ml-features.html).\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h4>Más información</h4>\n<ul>\n  <li><a href=\"http://spark.apache.org/docs/latest/ml-features.html\">Spark Docs - Extracting, transforming and selecting features</a>.</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_1705581607",
      "id": "20201028-171210_58115006",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32509"
    },
    {
      "text": "%md\n### Visualización",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Visualización</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_33903467",
      "id": "20171030-182836_1299248311",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32510"
    },
    {
      "title": "Image plotter en Python",
      "text": "%pyspark\n\ndef plot_classification(df, surfaceDF=None, prob=False):\n    import matplotlib.pyplot as plt\n    import numpy as np\n    import matplotlib.cm as cm\n\n    from matplotlib.colors import ListedColormap, LinearSegmentedColormap\n\n    cmap_light = LinearSegmentedColormap.from_list(\"light\", ['#FF5555', '#5555FF'])\n    cmap_pastel = LinearSegmentedColormap.from_list(\"pastel\", ['#FF8888', '#8888FF'])\n    cmap_bold = ListedColormap(['#FF0000', '#00FF00', '#0000FF'])\n\n    # helper function to display in Zeppelin\n    def show(p):\n        from io import BytesIO\n        import base64\n        #img = StringIO()\n        img = BytesIO()\n        p.savefig(img, format='png')#,dpi=600)\n        img.seek(0)\n        print(\"%html <div style='width:600px'><img src=\\\"data:image/png;base64,\" + base64.encodebytes(img.getvalue()).decode().replace('\\n', '') + \"\\\"/></div>\")\n        #print(\"%html <div style='width:600px'><img src=\\\"data:image/png;base64,\" + img.buf.encode('base64').replace('\\n', '') + \"\\\"/></div>\")\n\n    plt.close('all')\n\n    plt.autoscale(enable=True, axis='x', tight=True)\n\n    if surfaceDF:\n\n        if prob:\n            pSTable = surfaceDF.select('kgs','mts','prob').toPandas()\n            Z = pSTable['prob']\n        else:\n            pSTable = surfaceDF.select('kgs','mts','prediction').toPandas()\n            Z = pSTable['prediction']\n\n        xs = pSTable['kgs']\n        ys = pSTable['mts']\n\n        xUs = xs.unique()\n        yUs = ys.unique()\n\n        xx, yy = np.meshgrid(xUs,yUs)\n\n        Z = Z.values.reshape(xx.shape).transpose()\n\n        if prob:\n            plt.pcolormesh(xx, yy, Z, shading='auto', cmap=cmap_light)\n        else:\n            plt.pcolormesh(xx, yy, Z, shading='auto', cmap=cmap_pastel)\n\n        plt.axis([xs.min(), xs.max(), ys.min(), ys.max()])\n\n    pTable = df.select('kgs','mts','label').toPandas().sample(frac=1)\n\n    xs = pTable['kgs']\n    ys = pTable['mts']\n    cs = pTable['label']\n    plt.scatter(xs, ys, c=cs, cmap=cmap_bold, alpha=0.5, s=16)\n    plt.xlabel('kgs')\n    plt.ylabel('mts')\n\n    show(plt)\n    plt.close()\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "lineNumbers": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 10,
        "title": true,
        "results": [],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_866489318",
      "id": "20161102-154506_492289084",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32511"
    },
    {
      "title": "Plot train data",
      "text": "%pyspark\nplot_classification(trainFeaturized)",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_1124021780",
      "id": "20171030-173939_397652020",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32512"
    },
    {
      "text": "%md\n## Clasificación\n\n### Decision Tree\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Clasificación</h2>\n<h3>Decision Tree</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_2002218275",
      "id": "20171030-182312_417188960",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32513"
    },
    {
      "title": "Entrenamiento",
      "text": "%pyspark\nfrom pyspark.ml.classification import DecisionTreeClassifier\n\n# Se crea el Estimator\ndtEstimator = DecisionTreeClassifier(\n                featuresCol=\"features\",\n                labelCol=\"label\")\n\n#print dtEstimator.explainParams()\n\ndtModel = dtEstimator.fit(trainFeaturized)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_2029334536",
      "id": "20161107-153258_1183600330",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32514"
    },
    {
      "text": "println(s\"\"\"%html\n<br>\n<center>\n<img src=\"$baseDir/05_ml/10-decision-tree.svg\" alt=\"Drawing\" style=\"width: 100%;\"/>\n</center>\n\"\"\")\n/*\n%md\n\n<br>\n\n%%% yuml type=class style=plain format=svg\n  [note:trainFeaturized{bg:cornsilk}]->[dtEstimator;(algoritmo ML)|fit(){bg:red}]\n  [dtEstimator;(algoritmo ML)|fit(){bg:red}]->[note:dtModel;(model){bg:orange}]\n%%%\n[trainFeaturized{bg:cornsilk}]->[dtEstimator|*fit()*{bg:red}]\n  [dtEstimator|*fit()*{bg:red}]->[dtModel{bg:orange}]\n*/",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 6,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<br>\n<center>\n<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/05_ml/10-decision-tree.svg\" alt=\"Drawing\" style=\"width: 100%;\"/>\n</center>\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103618_1303813870",
      "id": "20171030-183244_477068133",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32515"
    },
    {
      "title": "Probando el modelo",
      "text": "%pyspark\n\nfrom pyspark.sql import Row\n\nkgs = float(z.input(\"Peso en kilos:\",\"80.0\"))\nmts = float(z.input(\"Altura en metros:\",\"1.8\"))\n\ndfOneInput = sc.parallelize([Row(kgs=kgs,mts=mts)]).toDF()\n\ndfOneFeaturized = vAssembler.transform(dfOneInput)\n\ndfOnePrediction = dtModel.transform(dfOneFeaturized)\n\nlabels = sexIndexer.labels\n\nfullGender = { \"F\" : \"Femenino\", \"M\" : \"Masculino\"}\n\npred = dfOnePrediction.first().prediction\n\ngenre = fullGender[labels[int(pred)]]\n\nprint(\"%html <h3>Género: {}</h3>\".format(genre))\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": true,
        "fontSize": 14,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {
          "peso en kilos:": "90",
          "Peso en kilos:": "65",
          "Altura en metros:": "1.5"
        },
        "forms": {
          "Peso en kilos:": {
            "type": "TextBox",
            "name": "Peso en kilos:",
            "displayName": "Peso en kilos:",
            "defaultValue": "80.0",
            "hidden": false,
            "$$hashKey": "object:33548"
          },
          "Altura en metros:": {
            "type": "TextBox",
            "name": "Altura en metros:",
            "displayName": "Altura en metros:",
            "defaultValue": "1.8",
            "hidden": false,
            "$$hashKey": "object:33549"
          }
        }
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_483460148",
      "id": "20171031-115708_799482",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32516"
    },
    {
      "title": "Featurize dataset de test",
      "text": "%pyspark\n\ntestAssembled = vAssembler.transform(testDF)\ntestFeaturized = sexIndexer.transform(testAssembled)\n\nz.show(testFeaturized.sample(False, 0.1))\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "sex": "string",
                      "features": "string",
                      "label": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "sex": "string",
                      "features": "string",
                      "label": "string"
                    },
                    "updated": true
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1872533354",
      "id": "20171030-191336_34491578",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32517"
    },
    {
      "title": "Calcular grilla de kgs*mts para visualizar fondo",
      "text": "%pyspark\n\n#/* Crea grid peso*altura del fondo\n# * para el gráfico anterior\n#**********************************/\n\ndef createGrid():\n\n    from pyspark.sql.functions import min, max\n    \n    maxTics = 256\n\n    def fgrid (x, min, max, tics):\n        tics2 = tics - 2\n        return (float(x-1)*(max-min)+tics2*min)/tics2\n\n\n    minKgs, maxKgs, minMts, maxMts = people.agg(min(\"kgs\"), max(\"kgs\"), min(\"mts\"), max(\"mts\")).first()\n\n    # 1.- numeracion ticks en x \n    # 2.- numeracion ticks en (x, y)\n    # 3.- todos los (kgs, mts) \n    return sc.parallelize(range(maxTics)) \\\n            .flatMap(lambda x: [ (x, y) for y in range(maxTics)]) \\\n            .map(lambda x_y: (fgrid(x_y[0], minKgs, maxKgs, maxTics), fgrid(x_y[1], minMts, maxMts, maxTics))) \\\n            .toDF([\"kgs\", \"mts\"])\n\n\ndfGrid = createGrid()\n\ngrid = vAssembler.transform(dfGrid).cache()\nz.show(grid.limit(5))",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {},
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "features": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1840432983",
      "id": "20201028-174622_901506110",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32518"
    },
    {
      "title": "Predecimos grilla del fondo",
      "text": "%pyspark\n# Creo predicciones de la grilla\ngridPredictionDT = dtModel.transform(grid)\n\nz.show(gridPredictionDT.sample(False, 0.001))\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "features": "string",
                      "rawPrediction": "string",
                      "probability": "string",
                      "prediction": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1952793325",
      "id": "20171030-185922_914672286",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32519"
    },
    {
      "title": "Plot Decision Tree Predictions",
      "text": "%pyspark\nplot_classification(testFeaturized, surfaceDF=gridPredictionDT)",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1260632486",
      "id": "20171030-191207_1802786448",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32520"
    },
    {
      "title": "Ejercicio",
      "text": "%md\nModifique el siguiente programa para aumentar la **profundidad** del árbol de decisión a 10.\n\n#### Ayuda\n\n* Busque en documentación [API Python Spark - Decision Trees](http://spark.apache.org/docs/2.2.1/api/python/pyspark.ml.html#pyspark.ml.classification.DecisionTreeClassifier).\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Modifique el siguiente programa para aumentar la <strong>profundidad</strong> del árbol de decisión a 10.</p>\n<h4>Ayuda</h4>\n<ul>\n  <li>Busque en documentación <a href=\"http://spark.apache.org/docs/2.2.1/api/python/pyspark.ml.html#pyspark.ml.classification.DecisionTreeClassifier\">API Python Spark - Decision Trees</a>.</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1940023465",
      "id": "20171030-192632_1207126648",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32521"
    },
    {
      "text": "%pyspark\n\nfrom pyspark.ml.classification import DecisionTreeClassifier\n\n# Se crea el Estimator\ndtEstimator2 = DecisionTreeClassifier(\n                featuresCol=\"features\",\n                labelCol=\"label\",\n                ...)\n\n\n# Se crea el modelo con los datos de test featurizados\ndtModel2 = dtEstimator2...\n\n# Se predice la grilla\ngridPredictionDT2 = dtModel2.transform(grid)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_765386820",
      "id": "20171030-192143_1165730818",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32522"
    },
    {
      "title": "Plot Decision Tree Predictions",
      "text": "%pyspark\nplot_classification(testFeaturized, surfaceDF=gridPredictionDT2)",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": [],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_2074316887",
      "id": "20161107-153542_1780323791",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32523"
    },
    {
      "text": "%md\n\n### Random Forest\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Random Forest</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1082935226",
      "id": "20171030-195005_486215707",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32524"
    },
    {
      "title": "Creación del modelo",
      "text": "%pyspark\nfrom pyspark.ml.classification import RandomForestClassifier\n\n# Se crea el Estimator\nrfEstimator = RandomForestClassifier(\n                featuresCol=\"features\",\n                labelCol=\"label\",\n                numTrees=100)\n\nrfModel = rfEstimator.fit(trainFeaturized)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "fontSize": 14,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1909339442",
      "id": "20171030-034039_1210912394",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32525"
    },
    {
      "title": "Predecimos grilla del fondo",
      "text": "%pyspark\n\ngridPredictionRF = rfModel.transform(grid)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "fontSize": 14,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1470141263",
      "id": "20171030-195356_14273686",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32526"
    },
    {
      "title": "Plot Random Forest",
      "text": "%pyspark\n\nplot_classification(testFeaturized, surfaceDF=gridPredictionRF)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "fontSize": 14,
        "title": true,
        "results": [],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_297076800",
      "id": "20171030-034111_1613140514",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32527"
    },
    {
      "text": "%md\n\n### Logistic Regression\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Logistic Regression</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1927925632",
      "id": "20171030-200155_1231865651",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32528"
    },
    {
      "title": "Creación del modelo",
      "text": "%pyspark\nfrom pyspark.ml.classification import LogisticRegression\n\n# Se crea el Estimator\nlrEstimator = LogisticRegression(\n                maxIter=100,\n                labelCol=\"label\",\n                regParam=0.01)\n\nlrModel = lrEstimator.fit(trainFeaturized)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_279186642",
      "id": "20161107-130547_297924932",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32529"
    },
    {
      "title": "Probando el modelo",
      "text": "%pyspark\n\nfrom pyspark.sql import Row\n\nkgs = float(z.input(\"Peso en kilos:\",\"80.0\"))\nmts = float(z.input(\"Altura en metros:\",\"1.8\"))\n\ndfOneInput = sc.parallelize([Row(kgs=kgs,mts=mts)]).toDF()\n\ndfOneFeaturized = vAssembler.transform(dfOneInput)\n\ndfOnePrediction = dtModel.transform(dfOneFeaturized)\n\nlabels = sexIndexer.labels\n\nposF = labels.index(\"F\")\n\nfemProb = dfOnePrediction.first().probability[posF]\n\nfemProbPerc = int(round(100.0 * femProb))\n\nprint(\"%html <h3>Probabilidad que sea mujer: {}%</h3>\".format(femProbPerc))\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": true,
        "fontSize": 14,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {
          "Peso en kilos:": "95.0",
          "Altura en metros:": "1.7"
        },
        "forms": {
          "Peso en kilos:": {
            "type": "TextBox",
            "name": "Peso en kilos:",
            "displayName": "Peso en kilos:",
            "defaultValue": "80.0",
            "hidden": false,
            "$$hashKey": "object:33762"
          },
          "Altura en metros:": {
            "type": "TextBox",
            "name": "Altura en metros:",
            "displayName": "Altura en metros:",
            "defaultValue": "1.8",
            "hidden": false,
            "$$hashKey": "object:33763"
          }
        }
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_172297217",
      "id": "20171031-121619_277408470",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32530"
    },
    {
      "title": "Predecimos grilla del fondo",
      "text": "%pyspark\n\nfrom pyspark.sql.types import DoubleType\nfrom pyspark.sql.functions import lit, udf\n\ndef ith_(v, i):\n    try:\n        return float(v[i])\n    except ValueError:\n        return None\n\nith = udf(ith_, DoubleType())\n\n\ngridPredictionLR = lrModel.transform(grid) \\\n                    .select(\"*\", ith(\"probability\",lit(1-posF)).alias(\"prob\"))\n\nz.show(gridPredictionLR.sample(False,0.001))\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "kgs",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "mts",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "features",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "rawPrediction",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "probability",
                        "visible": true,
                        "width": 254,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "prediction",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "prob",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "features": "string",
                      "rawPrediction": "string",
                      "probability": "string",
                      "prediction": "string",
                      "prob": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1743929818",
      "id": "20171030-202050_1263604133",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32531"
    },
    {
      "title": "Plot Logistic Regression",
      "text": "%pyspark\n\nplot_classification(testFeaturized, surfaceDF=gridPredictionLR, prob=True)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 12,
        "title": true,
        "results": [],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_483020730",
      "id": "20161107-131714_601581381",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32532"
    },
    {
      "title": "Logistic Regression with Poly expansion",
      "text": "%md\n\n* El algoritmo ML *Logistic Regression* es un algoritmo de clasificación logísitica **lineal**. \n* Esta limitación puede salvarse aumentando la dimensión del espacio:\n\n    ![](https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/05_ml/dimension_expansion.png)\n\n### Para lograrlo puede utilizarse [Spark Polinomial Expansion](http://spark.apache.org/docs/latest/ml-features.html#polynomialexpansion).\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<ul>\n  <li>El algoritmo ML <em>Logistic Regression</em> es un algoritmo de clasificación logísitica <strong>lineal</strong>.</li>\n  <li>Esta limitación puede salvarse aumentando la dimensión del espacio:\n    <p><img src=\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/05_ml/dimension_expansion.png\" /></p>\n  </li>\n</ul>\n<h3>Para lograrlo puede utilizarse <a href=\"http://spark.apache.org/docs/latest/ml-features.html#polynomialexpansion\">Spark Polinomial Expansion</a>.</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1810948279",
      "id": "20171030-204410_530582793",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32533"
    },
    {
      "title": "Ejercicio",
      "text": "%md\n\nModificar el siguiente programa para utilizar [Spark Polinomial Expansion](http://spark.apache.org/docs/latest/ml-features.html#polynomialexpansion) hasta grado 3.\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Modificar el siguiente programa para utilizar <a href=\"http://spark.apache.org/docs/latest/ml-features.html#polynomialexpansion\">Spark Polinomial Expansion</a> hasta grado 3.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_795960464",
      "id": "20171030-205821_996337765",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32534"
    },
    {
      "title": "Logistic Regression con Poly expansion",
      "text": "%pyspark\n\nfrom pyspark.ml.feature import PolynomialExpansion\n\npolyExpansion = PolynomialExpansion( \n    inputCol=\"features\",\n    outputCol=\"features_expansion\",\n    degree=...) # llenar (ver documentacion)\n\ntrainFeaturizedPoly = polyExpansion.transform(trainFeaturized)\n\nlrEstimatorPoly = LogisticRegression(\n    featuresCol=..., # llenar\n    maxIter=100,\n    regParam=0.01)\n\nlrModelPoly = lrEstimatorPoly.fit(...) # llenar\n\ngridPoly = polyExpansion.transform(grid)\n\ngridPredictionLRPoly = lrModelPoly.transform(gridPoly) \\\n                            .select(\"*\", ith(\"probability\",lit(1-posF)).alias(\"prob\"))\n                            \nz.show(gridPredictionLRPoly.sample(False,0.001))\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "kgs",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "mts",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "features",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "features_expansion",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "rawPrediction",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "probability",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "prediction",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "prob",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "kgs": "string",
                      "mts": "string",
                      "features": "string",
                      "features_expansion": "string",
                      "rawPrediction": "string",
                      "probability": "string",
                      "prediction": "string",
                      "prob": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1765209182",
      "id": "20201029-105351_101361532",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32535"
    },
    {
      "text": "%pyspark\n\nplot_classification(testFeaturized, surfaceTable=gridPredictionLRPoly, prob=True)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_305896298",
      "id": "20171030-040455_976462143",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32536"
    },
    {
      "text": "%md\n## Clustering\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Clustering</h2>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_566013806",
      "id": "20171030-212118_1749792392",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32537"
    },
    {
      "title": "Creación de datos 3D al azar",
      "text": "%pyspark\n\nfrom pyspark.mllib.random import RandomRDDs\nfrom pyspark.ml.linalg import DenseVector\n\ndimension = 3\ncantVect = 50\ndisper = 5.0\n\n# Creo cantVect puntos con distribucion normal centrado en 5 ptos distintos\n\ndataset1 = RandomRDDs.normalVectorRDD(sc, cantVect, dimension) \\\n    .map(lambda v: DenseVector(v)) \\\n    .map(lambda dv: (dv,)) \\\n    .toDF([\"features\"])\n\ndataset2 = RandomRDDs.normalVectorRDD(sc, cantVect, dimension) \\\n    .map(lambda v: DenseVector([v[0]+disper,v[1],v[2]])) \\\n    .map(lambda dv: (dv,)) \\\n    .toDF([\"features\"])\n\ndataset3 = RandomRDDs.normalVectorRDD(sc, cantVect, dimension) \\\n    .map(lambda v: DenseVector([v[0],v[1]+disper,v[2]])) \\\n    .map(lambda dv: (dv,)) \\\n    .toDF([\"features\"])\n\ndataset4 = RandomRDDs.normalVectorRDD(sc, cantVect, dimension) \\\n    .map(lambda v: DenseVector([v[0],v[1],v[2]+disper])) \\\n    .map(lambda dv: (dv,)) \\\n    .toDF([\"features\"])\n\ndataset5 = RandomRDDs.normalVectorRDD(sc, cantVect, dimension) \\\n    .map(lambda v: DenseVector([v[0]+disper,v[1]+disper,v[2]+disper])) \\\n    .map(lambda dv: (dv,)) \\\n    .toDF([\"features\"])\n\ndataset = dataset1.union(dataset2).union(dataset3).union(dataset4).union(dataset5)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "features": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_48819199",
      "id": "20201029-115810_2102902904",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32538"
    },
    {
      "title": "Dataset con puntos 3D",
      "text": "%pyspark\n\nz.show(dataset.sample(False, 0.1))",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "features": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1607713043",
      "id": "20181023-192830_1881710964",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32539"
    },
    {
      "title": "Python plotter",
      "text": "%pyspark\n\ndef plot_clustering(df, centersDF=None):\n\n    import plotly as py\n    import plotly.graph_objs as go\n\n    pltWidth = 800\n    pltHeight = 600\n    \n    def plot(plot_dic, width=pltWidth, **kwargs):\n        kwargs['output_type'] = 'div'\n        plot_str = py.offline.plot(plot_dic, **kwargs)\n        print('%%html <div style=\"width: %spx\"> %s </div>'  % (width, plot_str))\n\n    pEvalData = df.toPandas()\n\n    if centersDF:\n\n        pEvalCenters = centersDF.toPandas()\n\n        eData = go.Scatter3d(\n            x=pEvalData.x,\n            y=pEvalData.y,\n            z=pEvalData.z,\n            showlegend=False,\n            mode='markers',\n            marker=dict(\n                size=1.5,\n                color=pEvalData.prediction, # set color to an array/list of desired values\n                colorscale='Rainbow'   # choose a colorscale\n            ),\n            opacity=0.6\n        )\n\n        eCenters = go.Scatter3d(\n            x=pEvalCenters.x,\n            y=pEvalCenters.y,\n            z=pEvalCenters.z,\n            showlegend=False,\n            mode='markers',\n            marker=dict(\n                size=3,\n                line = dict(\n                    width = 1,\n                    color = 'black'\n                ),\n                symbol='x',\n                color=pEvalCenters.prediction, # set color to an array/list of desired values\n                colorscale='Rainbow'   # choose a colorscale\n            ),\n            opacity=1.0\n        )\n        \n        data = [eData,eCenters]\n\n        layout = go.Layout(\n            title=\"Clusters\",\n            width=pltWidth,\n            height=pltHeight\n        )\n\n    else:\n\n        eData = go.Scatter3d(\n            x=pEvalData.x,\n            y=pEvalData.y,\n            z=pEvalData.z,\n            showlegend=False,\n            mode='markers',\n            marker=dict(\n                size=1.5,\n                line = dict(\n                    width = 1,\n                    color = 'black'\n                ),\n                color='cyan'\n            ),\n            opacity=0.8\n        )\n\n        data = [eData]\n\n        layout = go.Layout(\n            title=\"Data\",\n            width=pltWidth,\n            height=pltHeight\n        )\n        \n\n    plot({\n        \"data\": data,\n        \"layout\": layout\n    })\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "lineNumbers": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 12,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_540530031",
      "id": "20171106-185738_491325525",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32540"
    },
    {
      "title": "Plot data",
      "text": "%pyspark\n\nfrom pyspark.sql.types import DoubleType\nfrom pyspark.sql.functions import lit, udf\n\ndef ith_(v, i):\n    try:\n        return float(v[i])\n    except ValueError:\n        return None\n\nith = udf(ith_, DoubleType())\n\ndsFeatures = dataset \\\n    .select(ith(\"features\",lit(0)).alias(\"x\"), \n            ith(\"features\",lit(1)).alias(\"y\"), \n            ith(\"features\",lit(2)).alias(\"z\"))\n\nplot_clustering(dsFeatures)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1116669035",
      "id": "20171031-015523_507876710",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32541"
    },
    {
      "title": "Creación de modelo k-means",
      "text": "%pyspark\n\nfrom pyspark.ml.clustering import KMeans\n\nkmeans = KMeans(k = 5, # set number of clusters\n                featuresCol=\"features\",\n                predictionCol=\"prediction\")\n\nmodel = kmeans.fit(dataset)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1801496677",
      "id": "20171030-212354_434864230",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32542"
    },
    {
      "title": "Evaluación de datos de entrada con el modelo",
      "text": "%pyspark\n\nevalData = model.transform(dataset) \\\n    .select(\"*\",\n            ith(\"features\",lit(0)).alias(\"x\"), \n            ith(\"features\",lit(1)).alias(\"y\"), \n            ith(\"features\",lit(2)).alias(\"z\"))\n\n\nz.show(evalData.sample(False, 0.1))\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "features": "string",
                      "prediction": "string",
                      "x": "string",
                      "y": "string",
                      "z": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_67583643",
      "id": "20171030-212654_1670049849",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32543"
    },
    {
      "title": "Evalúo centroides",
      "text": "%pyspark\n\ncenters = sc.parallelize(model.clusterCenters()).map(lambda v: (DenseVector(v),)).toDF([\"features\"])\nevalCenters = model.transform(centers) \\\n    .select(\"*\",\n            ith(\"features\",lit(0)).alias(\"x\"), \n            ith(\"features\",lit(1)).alias(\"y\"), \n            ith(\"features\",lit(2)).alias(\"z\"))\n\nz.show(evalCenters)",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "features": "string",
                      "prediction": "string",
                      "x": "string",
                      "y": "string",
                      "z": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "features": "string",
                      "prediction": "string",
                      "x": "string",
                      "y": "string",
                      "z": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_3478387",
      "id": "20201028-184223_1946095610",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32544"
    },
    {
      "title": "Clusters resultados",
      "text": "%pyspark\n\nplot_clustering(evalData,centersDF=evalCenters)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103620_1573770366",
      "id": "20171031-020723_554273089",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32545"
    },
    {
      "text": "%md\n#### Ejercicio\n\nComplete el código siguiente para implementar un modelo que clusterice los datos anteriores utilizando Bisecting K-means.\n\n##### Ayuda\n* [Bsecting K-means](http://spark.apache.org/docs/2.2.1/ml-clustering.html#bisecting-k-means) en Spark.\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h4>Ejercicio</h4>\n<p>Complete el código siguiente para implementar un modelo que clusterice los datos anteriores utilizando Bisecting K-means.</p>\n<h5>Ayuda</h5>\n<ul>\n  <li><a href=\"http://spark.apache.org/docs/2.2.1/ml-clustering.html#bisecting-k-means\">Bsecting K-means</a> en Spark.</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103621_1655935182",
      "id": "20191205-193346_728706229",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32546"
    },
    {
      "text": "%pyspark\n\nfrom pyspark.ml.clustering import ...KMeans\nfrom pyspark.sql.types import DoubleType\nfrom pyspark.sql.functions import lit, udf\n\nbkMeans = ...KMeans(k = ..., # set number of clusters\n                featuresCol=\"features\",\n                predictionCol=\"prediction\")\n\nbkmModel = ....fit(dataset)\n\ndef ith_(v, i):\n    try:\n        return float(v[i])\n    except ValueError:\n        return None\n\nith = udf(ith_, DoubleType())\n\nbkmEvalData = bkmModel.transform(dataset) \\\n    .select(\"*\",\n            ith(\"features\",lit(0)).alias(\"x\"), \n            ith(\"features\",lit(1)).alias(\"y\"), \n            ith(\"features\",lit(2)).alias(\"z\"))\n\nbkmCenters = sc.parallelize(bkmModel....()).map(lambda v: (DenseVector(v),)).toDF([\"features\"])\n\nbkmEvalCenters = bkmModel.transform(bkmCenters) \\\n    .select(\"*\",\n            ith(\"features\",lit(0)).alias(\"x\"), \n            ith(\"features\",lit(1)).alias(\"y\"), \n            ith(\"features\",lit(2)).alias(\"z\"))\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 12,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103621_924815918",
      "id": "20191205-193540_1402055631",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32547"
    },
    {
      "text": "%pyspark\n\nplot_clustering(bkmEvalData,centersDF=bkmEvalCenters)",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103621_1936508382",
      "id": "20191205-194726_1959948215",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32548"
    },
    {
      "text": "%md\n\n### Documentación \n\n* [Spark ML Guide](http://spark.apache.org/docs/latest/ml-guide.html)\n* [Spark Python API ML Guide](http://spark.apache.org/docs/latest/api/python/pyspark.ml.html)\n* [Databricks ML Documentation](https://docs.databricks.com/spark/latest/mllib/index.html)\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Documentación</h3>\n<ul>\n  <li><a href=\"http://spark.apache.org/docs/latest/ml-guide.html\">Spark ML Guide</a></li>\n  <li><a href=\"http://spark.apache.org/docs/latest/api/python/pyspark.ml.html\">Spark Python API ML Guide</a></li>\n  <li><a href=\"https://docs.databricks.com/spark/latest/mllib/index.html\">Databricks ML Documentation</a></li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103621_539809637",
      "id": "20181023-195851_1433599159",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32549"
    },
    {
      "title": "FIN",
      "text": "val baseDir=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases\"\n//val baseDir=\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases\"\n//val baseDir=\"http://localhost:8000\"\n\nz.put(\"baseDir\", baseDir)\nprint(\"\"\"%html\n<script>\n    var heads = document.getElementsByTagName('h2');\n    var numHeads = heads.length;\n    var inner = \"\";\n    var i = 0;\n    var j = 0;\n    while (i < numHeads){\n        inner = heads[i].innerHTML;\n        if (inner.search(\".-\") != -1 ) {\n            j++;\n            heads[i].innerHTML = inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n</script>\n\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "2021-10-22T13:25:03+0000",
      "progress": 0,
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<script>\n    var heads = document.getElementsByTagName('h2');\n    var numHeads = heads.length;\n    var inner = \"\";\n    var i = 0;\n    var j = 0;\n    while (i < numHeads){\n        inner = heads[i].innerHTML;\n        if (inner.search(\".-\") != -1 ) {\n            j++;\n            heads[i].innerHTML = inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n</script>\nbaseDir: String = https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1634909103621_1516364542",
      "id": "20171030-041758_1069452526",
      "dateCreated": "2021-10-22T13:25:03+0000",
      "status": "READY",
      "$$hashKey": "object:32550"
    }
  ],
  "name": "Clase 05 - Machine Learning",
  "id": "2GMJC1ZRU",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/Clase 05 - Machine Learning"
}